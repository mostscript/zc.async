# # this is a drop-in zc.buildout file to use lxml with locally-built libxml2
# # and libxslt files.  To use, follow these directions.

# # 1. include "lxml" in setup.py's install_requires

# # 2. include "libxml2 libxslt lxml", in that order, in your "buildout"
# #    section's "parts" list, usually **at the beginning of the list**.  

# # 3. Also, include the name of this file in the "buildout" section's
# #    "extends" list.

# # Here's a minimal example.

# [buildout]
# parts = libxml2 libxslt lxml
# extends = lxml.cfg

# # On Linux, you're done.

# # On the Mac, you need to make sure that your environment when
# # running your application has a DYLD_LIBRARY_PATH pointing to the right
# # libraries.  

# # For instance, processes that use supervisor or zdaemon can put
# # the values in the conf file.  For Zope instances using zdaemon
# # (recipe = zc.zope3recipes:instance), for instance, you need to include the
# # following in the buildout section.

# zdaemon.conf =
#   <environment>
#    DYLD_LIBRARY_PATH ${parameters:library_path}
#   </environment>

# # Scripts that do not use one of these wrappers, such as bin/test and bin/py,
# # will typically need to be preceeded with ``DYLD_LIBRARY_PATH=...``, where
# # the ellipsis is replaced with the lib directories for the libxml2 and
# # libxslt libraries--usually (replace "[buildout directory]")
# # ``[buildout directory]/parts/libxml2/lib:[buildout directory]/parts/libxslt/lib``.
# # (If you used the zdaemon environment above, you can find this value in
# # the instance part's zdaemon.conf.)  

# # zc.recipe.wrapper can help you automate this.  See wrapper.cfg for a
# # drop-in helper for building an interpreter and a zope-style testrunner.

# # primary customization point: override these as necessary
[parameters]
libxml2_version = 2.6.32
libxslt_version = 1.1.24
libxml2_directory = ftp://xmlsoft.org/libxml2
libxslt_directory = ${parameters:libxml2_directory}

# # secondary customization point: override these as necessary
[snippets]
libxml2_download = ${parameters:libxml2_directory}/libxml2-${parameters:libxml2_version}.tar.gz
libxslt_download = ${parameters:libxslt_directory}/libxslt-${parameters:libxslt_version}.tar.gz

[lxml-build-environment]
XML2_CONFIG = ${libxml2:location}/bin/xml2-config
XSLT_CONFIG = ${libxslt:location}/bin/xslt-config

[lxml]
recipe = zc.recipe.egg:custom
egg = lxml
include-dirs = ${libxml2:location}/include/libxml2
               ${libxslt:location}/include
rpath = ${libxml2:location}/lib
        ${libxslt:location}/lib
library-dirs = ${libxml2:location}/lib
               ${libxslt:location}/lib
environment = lxml-build-environment

[libxml2]
recipe = zc.recipe.cmmi
url = ${snippets:libxml2_download}
extra_options = --without-python

[libxslt]
recipe = zc.recipe.cmmi
url = ${snippets:libxslt_download}
extra_options = --without-python --with-libxml-prefix=${libxml2:location}

# for use with wrapper.cfg
[paths]
lxml_library_path = ${libxml2:location}/lib:${libxslt:location}/lib
library_path = ${paths:lxml_library_path}
